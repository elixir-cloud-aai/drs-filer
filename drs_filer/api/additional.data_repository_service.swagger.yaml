paths:
  '/objects':
    post:
      summary: Create object.
      description: |-
        Register metadata of a data object.
      operationId: RegisterObjects
      responses:
        '200':
          description: The `DrsObject` was successfully created.
          schema:
            type: string
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: PostDrsObject
          description: Data object metadata.
          schema:
            $ref: '#/definitions/PostDrsObject'
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}':
    delete:
      summary: Delete object.
      description: >-
        Delete existing `DrsObject`.
      operationId: DeleteObject
      responses:
        '200':
          description: The `DrsObject` was successfully deleted.
          schema:
            type: string
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested `DrsObject` wasn't found.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
      tags:
        - DataRepositoryService
      x-swagger-router-controller: ga4gh.drs.server
definitions:
  PostDrsObject:
    type: object
    additionalProperties: false
    required: ['size', 'created_time', 'checksums']
    properties:
      name:
        type: string
        description: |-
          A string that can be used to name a `DrsObject`.
          This string is made up of uppercase and lowercase letters, decimal
          digits, hyphen, period, and underscore [A-Za-z0-9.-_]. See
          http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable filenames].
      size:
        type: integer
        format: int64
        description: |-
          For blobs, the blob size in bytes.
          For bundles, the cumulative size, in bytes, of items in the
          `contents` field.
      created_time:
        type: string
        format: date-time
        description: |-
          Timestamp of content creation in RFC3339.
          (This is the creation time of the underlying content, not of the JSON object.)
      updated_time:
        type: string
        format: date-time
        description: >-
          Timestamp of content update in RFC3339, identical to `created_time` in systems
          that do not support updates.
          (This is the update time of the underlying content, not of the JSON object.)
      version:
        type: string
        description: >-
          A string representing a version.

          (Some systems may use checksum, a RFC3339 timestamp, or an incrementing version number.)
      mime_type:
        type: string
        description: |-
          A string providing the mime-type of the `DrsObject`.
        example:
          application/json
      checksums:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Checksum'
        description: >-
          The checksum of the `DrsObject`. At least one checksum must be provided.

          For blobs, the checksum is computed over the bytes in the blob.


          For bundles, the checksum is computed over a sorted concatenation of the
          checksums of its top-level contained objects (not recursive, names not included).
          The list of checksums is sorted alphabetically (hex-code) before concatenation
          and a further checksum is performed on the concatenated checksum value.


          For example, if a bundle contains blobs with the following checksums:

          md5(blob1) = 72794b6d

          md5(blob2) = 5e089d29


          Then the checksum of the bundle is:

          md5( concat( sort( md5(blob1), md5(blob2) ) ) )

          = md5( concat( sort( 72794b6d, 5e089d29 ) ) )

          = md5( concat( 5e089d29, 72794b6d ) )

          = md5( 5e089d2972794b6d )

          = f7a29a04
      access_methods:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/AccessPostMethod'
        description: |-
          The list of access methods that can be used to fetch the `DrsObject`.
          Required for single blobs; optional for bundles.
      contents:
        type: array
        description: >-
          If not set, this `DrsObject` is a single blob.

          If set, this `DrsObject` is a bundle containing the listed `ContentsObject` s (some of which may be further nested).
        items:
          $ref: '#/definitions/ContentsObject'
      description:
        type: string
        description: |-
          A human readable description of the `DrsObject`.
      aliases:
        type: array
        items:
          type: string
        description: >-
          A list of strings that can be used to find other metadata
          about this `DrsObject` from external metadata sources. These
          aliases can be used to represent secondary
          accession numbers or external GUIDs.
  AccessPostMethod:
    description: Method through which object bytes can be fetched.
    type: object
    additionalProperties: false
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - s3
        - gs
        - ftp
        - gsiftp
        - globus
        - htsget
        - https
        - file
        description: >-
          Type of the access method.
      access_url:
        $ref: '#/definitions/AccessURL'
        description: >-
          An `AccessURL` that can be used to fetch the actual object bytes.
          Note that at least one of `access_url` and `access_id` must be provided.
      region:
        type: string
        description: >-
          Name of the region in the cloud service provider that the object belongs to.
        example:
          us-east-1
