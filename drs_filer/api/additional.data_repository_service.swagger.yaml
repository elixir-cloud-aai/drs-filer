paths:
  '/service-info':
    post:
      summary: Register service info.
      description: Create or update the service info.
      operationId: postServiceInfo
      tags:
        - DRS-Filer
      parameters:
        - in: body
          required: true
          name: Service info to add.
          description: Data object metadata.
          schema:
            $ref: '#/definitions/ServiceRegister'     
      responses:
        '201':
          description: The service info was successfully created.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: ga4gh.drs.server
  '/objects':
    post:
      summary: Create object.
      description: |-
        Register metadata of a data object.
      operationId: PostObject
      responses:
        '200':
          description: The `DrsObject` was successfully created.
          schema:
            type: string
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: DrsObjectRegister
          description: Data object metadata.
          schema:
            $ref: '#/definitions/DrsObjectRegister'
      tags:
        - DRS-Filer
      x-swagger-router-controller: ga4gh.drs.server
  '/objects/{object_id}':
    put:
      summary: Create or update an object.
      description: |-
        Create a DRS object with a predefined ID. Overwrites any
        existing DRS object with the same ID.
      operationId: PutObject
      responses:
        '200':
          description: The `DrsObject` was successfully created/updated.
          schema:
            type: string
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
        - in: body
          name: DrsObjectRegister
          description: Data object metadata.
          schema:
            $ref: '#/definitions/DrsObjectRegister'
      tags:
        - DRS-Filer
      x-swagger-router-controller: ga4gh.drs.server
'/objects/{object_id}/access':
    post:
      summary: Add additional access method to an existing object.
      operationId: PostObjectAccess
      responses:
        '201':
          description: Successfully added access method.
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Conflict - Object with the same ID already exists.
          schema:
             $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
        - in: body
          name: AdditionalAccessMethod
          description: Additional access method details.
          schema:
            $ref: '#/definitions/AdditionalAccessMethod'
      tags:
        - DRS-Filer
      x-swagger-router-controller: ga4gh.drs.server

    delete:
      summary: Delete object.
      description: >-
        Delete existing `DrsObject`.
      operationId: DeleteObject
      responses:
        '200':
          description: The `DrsObject` was successfully deleted.
          schema:
            type: string
        '400':
          description: The request is malformed.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: The request is unauthorized.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: The requester is not authorized to perform this action.
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The requested `DrsObject` wasn't found.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An unexpected error occurred.
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
      tags:
        - DRS-Filer
      x-swagger-router-controller: ga4gh.drs.server
'/objects/{object_id}/access/{access_id}':
    delete:
      summary: Delete object's access method.
      description: >-
        Delete existing `AccessMethod` of `DrsObject`.
      operationId: DeleteAccessMethod
      responses:
        '200':
            description: The `AccessMethod` was successfully deleted.
            schema:
              type: string
        '400':
            description: The request is malformed.
            schema:
              $ref: '#/definitions/Error'
        '401':
            description: The request is unauthorized.
            schema:
              $ref: '#/definitions/Error'
        '403':
            description: The requester is not authorized to perform this action.
            schema:
              $ref: '#/definitions/Error'
        '404':
            description: The requested resource was not found.
            schema:
              $ref: '#/definitions/Error'
        '500':
            description: An unexpected error occurred.
            schema:
              $ref: '#/definitions/Error'
      parameters:
        - name: object_id
          in: path
          required: true
          type: string
        - name: access_id
          in: path
          required: true
          type: string
      tags:
        - DRS-Filer
      x-swagger-router-controller: ga4gh.drs.server    
definitions:
  ServiceRegister:
      description: 'GA4GH service'
      type: object
      required:
        - id
        - name
        - type
        - organization
        - version
      additionalProperties: false
      properties:
        id:
          type: string
          description: 'Unique ID of this service. Reverse domain name notation is recommended, though not required. The identifier should attempt to be globally unique so it can be used in downstream aggregator services e.g. Service Registry.'
          example: 'org.ga4gh.myservice'
        name:
          type: string
          description: 'Name of this service. Should be human readable.'
          example: 'My project'
        type:
          $ref: '#/definitions/ServiceTypeRegister'
        description:
          type: string
          description: 'Description of the service. Should be human readable and provide information about the service.'
          example: 'This service provides...'
        organization:
          type: object
          description: 'Organization providing the service'
          required:
            - name
            - url
          properties:
            name:
              type: string
              description: 'Name of the organization responsible for the service'
              example: 'My organization'
            url:
              type: string
              format: uri
              description: 'URL of the website of the organization (RFC 3986 format)'
              example: 'https://example.com'
        contactUrl:
          type: string
          format: uri
          description: 'URL of the contact for the provider of this service, e.g. a link to a contact form (RFC 3986 format), or an email (RFC 2368 format).'
          example: 'mailto:support@example.com'
        documentationUrl:
          type: string
          format: uri
          description: 'URL of the documentation of this service (RFC 3986 format). This should help someone learn how to use your service, including any specifics required to access data, e.g. authentication.'
          example: 'https://docs.myservice.example.com'
        createdAt:
          type: string
          format: date-time
          description: 'Timestamp describing when the service was first deployed and available (RFC 3339 format)'
          example: '2019-06-04T12:58:19Z'
        updatedAt:
          type: string
          format: date-time
          description: 'Timestamp describing when the service was last updated (RFC 3339 format)'
          example: '2019-06-04T12:58:19Z'
        environment:
          type: string
          description: 'Environment the service is running in. Use this to distinguish between production, development and testing/staging deployments. Suggested values are prod, test, dev, staging. However this is advised and not enforced.'
          example: 'test'
        version:
          type: string
          description: 'Version of the service being described. Semantic versioning is recommended, but other identifiers, such as dates or commit hashes, are also allowed. The version should be changed whenever the service is updated.'
          example: '1.0.0'
  ServiceTypeRegister:
      description: 'Type of a GA4GH service'
      type: object
      required:
        - group
        - artifact
        - version
      additionalProperties: false
      properties:
        group:
          type: string
          description: 'Namespace in reverse domain name format. Use `org.ga4gh` for implementations compliant with official GA4GH specifications. For services with custom APIs not standardized by GA4GH, or implementations diverging from official GA4GH specifications, use a different namespace (e.g. your organization''s reverse domain name).'
          example: 'org.ga4gh'
        artifact:
          type: string
          description: 'Name of the API or GA4GH specification implemented. Official GA4GH types should be assigned as part of standards approval process. Custom artifacts are supported.'
          example: 'beacon'
        version:
          type: string
          description: 'Version of the API or specification. GA4GH specifications use semantic versioning.'
          example: '1.0.0'
  DrsObjectRegister:
    type: object
    additionalProperties: false
    required: ['size', 'created_time', 'checksums']
    properties:
      name:
        type: string
        description: |-
          A string that can be used to name a `DrsObject`.
          This string is made up of uppercase and lowercase letters, decimal
          digits, hyphen, period, and underscore [A-Za-z0-9.-_]. See
          http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable filenames].
      size:
        type: integer
        format: int64
        description: |-
          For blobs, the blob size in bytes.
          For bundles, the cumulative size, in bytes, of items in the
          `contents` field.
      created_time:
        type: string
        format: date-time
        description: |-
          Timestamp of content creation in RFC3339.
          (This is the creation time of the underlying content, not of the JSON object.)
      updated_time:
        type: string
        format: date-time
        description: >-
          Timestamp of content update in RFC3339, identical to `created_time` in systems
          that do not support updates.
          (This is the update time of the underlying content, not of the JSON object.)
      version:
        type: string
        description: >-
          A string representing a version.

          (Some systems may use checksum, a RFC3339 timestamp, or an incrementing version number.)
      mime_type:
        type: string
        description: |-
          A string providing the mime-type of the `DrsObject`.
        example:
          application/json
      checksums:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/ChecksumRegister'
        description: >-
          The checksum of the `DrsObject`. At least one checksum must be provided.

          For blobs, the checksum is computed over the bytes in the blob.


          For bundles, the checksum is computed over a sorted concatenation of the
          checksums of its top-level contained objects (not recursive, names not included).
          The list of checksums is sorted alphabetically (hex-code) before concatenation
          and a further checksum is performed on the concatenated checksum value.


          For example, if a bundle contains blobs with the following checksums:

          md5(blob1) = 72794b6d

          md5(blob2) = 5e089d29


          Then the checksum of the bundle is:

          md5( concat( sort( md5(blob1), md5(blob2) ) ) )

          = md5( concat( sort( 72794b6d, 5e089d29 ) ) )

          = md5( concat( 5e089d29, 72794b6d ) )

          = md5( 5e089d2972794b6d )

          = f7a29a04
      access_methods:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/AccessMethodRegister'
        description: |-
          The list of access methods that can be used to fetch the `DrsObject`.
          Required for single blobs; optional for bundles.
      contents:
        type: array
        description: >-
          If not set, this `DrsObject` is a single blob.

          If set, this `DrsObject` is a bundle containing the listed `ContentsObject` s (some of which may be further nested).
        items:
          $ref: '#/definitions/ContentsObjectRegister'
      description:
        type: string
        description: |-
          A human readable description of the `DrsObject`.
      aliases:
        type: array
        items:
          type: string
        description: >-
          A list of strings that can be used to find other metadata
          about this `DrsObject` from external metadata sources. These
          aliases can be used to represent secondary
          accession numbers or external GUIDs.
  AccessMethodRegister:
    description: Method through which object bytes can be fetched.
    type: object
    additionalProperties: false
    required:
      - type
    properties:
      type:
        type: string
        enum:
        - s3
        - gs
        - ftp
        - gsiftp
        - globus
        - htsget
        - https
        - file
        description: >-
          Type of the access method.
      access_url:
        $ref: '#/definitions/AccessURLRegister'
        description: >-
          An `AccessURL` that can be used to fetch the actual object bytes.
          Note that at least one of `access_url` and `access_id` must be provided.
      region:
        type: string
        description: >-
          Name of the region in the cloud service provider that the object belongs to.
        example:
          us-east-1
  AccessURLRegister:
    type: object
    additionalProperties: false
    required: ['url']
    properties:
      url:
        type: string
        description: A fully resolvable URL that can be used to fetch the actual object bytes.
      headers:
        type: array
        items:
          type: string
        description: >-
          An optional list of headers to include in the HTTP request to `url`.
          These headers can be used to provide auth tokens required to fetch the object bytes.
  ChecksumRegister:
    type: object
    additionalProperties: false
    required: ['checksum', 'type']
    properties:
      checksum:
        type: string
        description: 'The hex-string encoded checksum for the data'
      type:
        type: string
        description: >-
          The digest method used to create the checksum.


          The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the https://www.iana.org/assignments/named-information/named-information.xhtml#hash-alg[IANA Named Information Hash Algorithm Registry].
          Other values MAY be used, as long as implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].


          GA4GH may provide more explicit guidance for use of non-IANA-registered algorithms in the future.
          Until then, if implementors do choose such an algorithm (e.g. because it's implemented by their storage provider), they SHOULD use an existing
          standard `type` value such as `md5`, `etag`, `crc32c`, `trunc512`, or `sha1`.
        example:
          sha-256
  ContentsObjectRegister:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        description: >-
          A name declared by the bundle author that must be
          used when materialising this object,
          overriding any name directly associated with the object itself.
          The name must be unique with the containing bundle.
          This string is made up of uppercase and lowercase letters, decimal digits, hypen, period, and underscore [A-Za-z0-9.-_]. See http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282[portable filenames].
      id:
        type: string
        description: >-
          A DRS identifier of a `DrsObject` (either a single blob or a nested bundle).
          If this ContentsObject is an object within a nested bundle, then the id is
          optional. Otherwise, the id is required.
      drs_uri:
        type: array
        description: >-
          A list of full DRS identifier URI paths
          that may be used to obtain the object.
          These URIs may be external to this DRS instance.
        example:
          - drs://drs.example.org/314159
          - drs://drs.example.org/213512
        items:
          type: string
      contents:
        type: array
        description: >-
          If this ContentsObject describes a nested bundle and the caller specified
          "?expand=true" on the request, then this contents array must be present and
          describe the objects within the nested bundle.
        items:
          $ref: '#/definitions/ContentsObjectRegister'
        example: []
    required:
      - name
tags:
  - name: DataRepositoryService
AdditionalAccessMethod:
  type: object
  properties:
    method_id:
      type: string
      description: ID of the access method.
    method_type:
      type: string
      description: Type of the access method (e.g., S3, HTTPS).
    method_url:
      type: string
      description: URL for the access method.
  required:
    - method_id
    - method_type
    - method_url

